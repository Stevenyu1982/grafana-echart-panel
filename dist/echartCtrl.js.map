{"version":3,"sources":["../src/echartCtrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","EChartRendering","OptionsTabCtrl","JSONPreviewCtrl","HTMLTabCtrl","EChartCtrl","$scope","$injector","$rootScope","templateSrv","hiddenSeries","panelDefaults","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","legendType","breakPoint","aliasColors","format","valueName","strokeWidth","fontSize","combine","threshold","label","html","join","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","setLegendWidthForLegacyBrowser","addEditorTab","buildDirective","data","getChartOptions","unitFormats","getUnitFormats","subItem","value","render","series","color","alias","replaceVariables","eoptions","fnc","Function","map","serie","i","stats","colors","legendData","dataList","seriesHandler","parsed","parseSeries","raw","jsdata","JSON","stringify","seriesData","datapoints","target","flotpairs","getFlotPairs","isNumber","decimals","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scope","elem","attrs","ctrl","attr","getPanelIdCSS","rendering","isIE11","window","MSInputMethodContext","document","documentMode","legend","sideWidth","id","text","replace","v","internalReplace","scopedVars","templateUrl"],"mappings":"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","file":"echartCtrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport EChartRendering from './rendering';\nimport OptionsTabCtrl from './optionsTab';\nimport JSONPreviewCtrl from './jsonPreviewCtrl';\nimport HTMLTabCtrl from './htmlTab';\n\nexport class EChartCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope, templateSrv) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.hiddenSeries = {};\n    this.templateSrv = templateSrv;\n\n    var panelDefaults = {\n      links: [],\n      datasource: null,\n      maxDataPoints: 3,\n      interval: null,\n      targets: [{}],\n      cacheTimeout: null,\n      nullPointMode: 'connected',\n      legendType: 'Under graph',\n      breakPoint: '50%',\n      aliasColors: {},\n      format: 'short',\n      valueName: 'current',\n      strokeWidth: 1,\n      fontSize: '80%',\n      combine: {\n        threshold: 0.0,\n        label: 'Others'\n      },\n      html: ['<div class=\"echart-panel__chart\"></div>',\n              '<script> $(\"#$__panelId\").one(\"init-markup\", function(ev, data){}) </script>',\n              '<script> $(\"#$__panelId\").one(\"echart-changed\", function(ev, data){}) </script>'\n            ].join('\\r\\n')\n    };\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n    this.setLegendWidthForLegacyBrowser();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Data preview', JSONPreviewCtrl.buildDirective(() => this.data), 2);\n    this.addEditorTab('HTML', HTMLTabCtrl.buildDirective(), 3);\n    this.addEditorTab('Chart', OptionsTabCtrl.buildDirective(), 4);\n    this.addEditorTab('Options preview', JSONPreviewCtrl.buildDirective(() => this.getChartOptions()), 5);\n    this.addEditorTab('Examples', 'public/plugins/grafana-echart-panel/examples.html');\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  onDataError() {\n    this.onDataReceived([]);\n    this.render();\n  }\n\n  changeSeriesColor(series, color) {\n    series.color = color;\n    this.panel.aliasColors[series.alias] = series.color;\n    this.render();\n  }\n\n  onRender() {\n    // this.data = this.parseSeries(this.series);\n  }\n\n  getChartMarkup(){\n    return this.replaceVariables(this.panel.html);\n  }\n\n  getChartOptions(){\n    var eoptions = this.replaceVariables(this.panel.eoptions);\n    var fnc = new Function('data', `return ${eoptions};`);\n    return fnc(this.data);\n  }\n\n  parseSeries(series) {\n    return _.map(series, (serie, i) => {\n      return {\n        label: serie.alias,\n        data: serie.stats[this.panel.valueName],\n        color: this.panel.aliasColors[serie.alias] || this.$rootScope.colors[i],\n        legendData: serie.stats[this.panel.valueName],\n      };\n    });\n  }\n\n  onDataReceived(dataList) {\n    var series = dataList.map(this.seriesHandler.bind(this));\n    var parsed = this.parseSeries(series);\n    this.data = {\n        raw: dataList,\n        series: series,\n        parsed: parsed\n    };\n    this.jsdata = JSON.stringify(this.data, null, 2);\n    this.render(this.data);\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return { decimals: this.panel.decimals, scaledDecimals: null };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec);\n    var norm = delta / magn; // norm is between 1.0 and 10.0\n    var size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) { dec = 0; }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  formatValue(value) {\n    var decimalInfo = this.getDecimalsForValue(value);\n    var formatFunc = kbn.valueFormats[this.panel.format];\n    if (formatFunc) {\n      return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n    }\n    return value;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    ctrl.elem = elem;\n    // Ensure we have a unique id\n    elem.attr('id', this.getPanelIdCSS());\n    this.rendering = new EChartRendering(scope, elem, attrs, ctrl);\n  }\n\n  toggleSeries(serie) {\n    if (this.hiddenSeries[serie.label]) {\n      delete this.hiddenSeries[serie.label];\n    } else {\n      this.hiddenSeries[serie.label] = true;\n    }\n    this.render();\n  }\n\n  onLegendTypeChanged() {\n    this.setLegendWidthForLegacyBrowser();\n    this.render();\n  }\n\n  setLegendWidthForLegacyBrowser() {\n    var isIE11 = !!window.MSInputMethodContext && !!document.documentMode;\n    if (isIE11 && this.panel.legendType === 'Right side' && !this.panel.legend.sideWidth) {\n      this.panel.legend.sideWidth = 150;\n    }\n  }\n  getPanelIdCSS(){\n    return `panel_markup_${this.panel.id}`;\n  }\n  internalReplace(text){\n    return text.replace(/\\$__[a-zA-Z0-9_]+/g, v =>{\n      switch(v){\n        case \"$__panelId\":\n          return this.getPanelIdCSS();\n      }\n      return v;\n    });\n  }\n  replaceVariables(text){\n    if(text){\n      text = this.internalReplace(text);\n      text = this.templateSrv.replace(text, this.panel.scopedVars);\n    }\n    return text;\n  }\n}\n\nEChartCtrl.templateUrl = 'module.html';\n"]}