{"version":3,"sources":["../src/rendering.js"],"names":["_","$","EChartRendering","scope","elem","attrs","ctrl","panel","init","events","on","onRender","bind","loadPlugins","e","console","error","id","src","endsWith","createScript","createLink","append","plugins","filter","p","length","map","loadAsset","html","find","remove","initEchart","options","getChartOptions","echart","setOption","resize","notify","data","jchart","echarts","theme","renderer","render","markup","getChartMarkup","lastMarkup","jmarkup","resetNotify","empty","log","type","off","trigger","incrementRenderCounter","raw","noDataPoints","undefined","setTimeout","clearWarning","initMarkup","addechart","renderingCompleted"],"mappings":"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","file":"rendering.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport 'jquery.flot';\nimport 'jquery.flot.pie';\nimport './lib/jquery.json-editor.min';\n//import echarts from './lib/echarts/echarts.min';\n//import liquidfill from './lib/echarts/liquidfill.min';\n\nexport default class EChartRendering {\n  constructor(scope, elem, attrs, ctrl) {\n    this.panel = ctrl.panel;\n    this.elem = elem;\n    this.ctrl = ctrl;\n    this.scope = scope;\n    this.init();\n  }\n\n  init() {\n    this.ctrl.events.on('render', this.onRender.bind(this));\n    try{\n      this.loadPlugins();\n    }catch(e){\n      console.error(e);\n    }\n  }\n\n  loadAsset(id, src) {\n    src.endsWith(\".js\") ?\n      this.createScript(id, src) :\n      this.createLink(id, src);\n  }\n\n  createLink(id, src) {\n    $('head').append(`<link rel=\"stylesheet\" id=\"${id}\" href=\"${src}\">`);\n  }\n\n  createScript(id, src) {\n    $('head').append(`<script type=\"text/javascript\" id=\"${id}\" src=\"${src}\"></script>`);\n  }\n\n  loadPlugins() {\n    // TODO: Fix dependencies plugins load\n    const plugins = [\n      { id: 'echarts', src: '/public/plugins/grafana-echart-panel/lib/echarts/echarts.min.js' },\n      { id: 'liquidfill', src: '/public/plugins/grafana-echart-panel/lib/echarts/liquidfill.min.js' }\n    ];\n    plugins.filter(p => $(`#${p.id}`).length === 0)\n      .map(p => this.loadAsset(p.id, p.src));\n  }\n\n  noDataPoints() {\n    var html = '<div class=\"datapoints-warning\"><span class=\"small\">No data points</span></div>';\n    this.elem.append(html);\n  }\n\n  clearWarning() {\n    this.elem.find('.datapoints-warning').remove();\n  }\n\n  addechart() {\n    if(!this.initEchart()) return;\n    try{\n      var options = this.ctrl.getChartOptions();\n      this.echart.setOption(options, true);\n      this.echart.resize();\n      this.notify('echart-changed',\n                        {data:this.ctrl.data, echart:this.echart, options: options});\n    }catch(e){\n      console.error(e);\n    }\n  }\n\n  initEchart() {\n    var jchart = this.elem.find('.echart-panel__chart');\n    if(!jchart.length){\n      return null;\n    }\n    if(!this.echart || !$(`[_echarts_instance_=\"${this.echart.id}\"]`).length){\n        this.echart = echarts.init(jchart[0],\n          this.panel.theme, {\n            renderer: this.panel.renderer || 'canvas'\n          });\n      }\n    return this.echart;\n  }\n\n  onRender() {\n    this.render(false);\n  }\n\n  initMarkup(){\n    var markup = this.ctrl.getChartMarkup();\n    if(markup === this.lastMarkup)\n      return;\n    try{\n      var jmarkup = $(markup);\n      this.resetNotify('init-markup');\n      this.resetNotify('echart-changed');\n      this.elem.find('.echart-panel__html')\n        .empty()\n        .html(jmarkup);\n      this.notify('init-markup', {data:this.ctrl.data});\n      this.lastMarkup = markup;\n    }catch(e){\n      console.log(e);\n    }\n  }\n\n  resetNotify(type){\n    this.elem.off(type);\n  }\n  notify(type, data){\n    this.elem.trigger(type, data);\n  }\n\n  render(incrementRenderCounter) {\n\n    if (!this.ctrl.data || !this.ctrl.data.raw.length) {\n      this.noDataPoints()\n      return;\n    }\n    if (echarts === undefined ||\n      echarts.init === undefined) {\n      setTimeout(() => this.render(incrementRenderCounter), 500);\n      return;\n    }\n\n    this.clearWarning();\n    this.initMarkup();\n    this.addechart();\n\n    if (incrementRenderCounter) {\n      this.ctrl.renderingCompleted();\n    }\n  }\n}\n"]}